'''
1) Координаты точки: Создайте кортеж point, содержащий координаты точки на плоскости.
Запросите у пользователя значения координат x и y и сохраните их в кортеже. Выведите
этот кортеж на экран.
'''
# x = float(input("Введите значение координаты x: "))
# y = float(input("Введите значение координаты y: "))
# point = (x, y)
# print(point)
'''
2) Информация о студенте: Создайте кортеж student_info, содержащий информацию о
студенте: имя, фамилия, возраст и средний балл. Запросите у пользователя эту
информацию и сохраните в кортеже. Выведите этот кортеж на экран.
'''
# name = input('Введите имя: ')
# surname = input('Введите фамилию: ')
# age = int(input('Введите возраст: '))
# grades = int(input('Введите средний балл: '))
# student_info = (name, surname, age, grades)
'''
3) Месяцы года: Создайте кортеж months, содержащий названия месяцев года. Выведите
каждый месяц на отдельной строке.
'''
# months = ('Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь')
# for i in months:
#     print(i)
'''
4) Оценки: Создайте кортеж grades, содержащий оценки студента за несколько предметов.
Выведите среднюю оценку студента.
'''
# grades = (100, 100, 95, 100, 100, 100, 100, 100)
# summa = 0
# for i in grades:
#     summa += i
# av_grade = summa / len(grades)
# print(av_grade)
'''
1) Уникальные элементы: Создайте множество unique_numbers, содержащее уникальные
элементы из списка чисел. Выведите это множество на экран.
'''
# unique_numbers = {100, 100, 95, 100, 100, 100, 100, 100}
# print(unique_numbers)
'''
2) Пересечение множеств: Создайте два множества set1 и set2, содержащие некоторые
общие элементы. Выведите на экран их пересечение.
'''
# set1 = {100, 100, 95, 100, 112, 100, 100, 100}
# set2 = {110, 120, 95, 111, 100, 101, 100, 100}
# print(set1.intersection(set2))
'''
3) Объединение множеств: Создайте два множества set1 и set2, содержащие различные
элементы. Выведите на экран их объединение.
'''
# set1 = {100, 100, 95, 100, 112, 100, 100, 100}
# set2 = {110, 120, 95, 111, 100, 101, 100, 100}
# print(set1.union(set2))
'''
4) Разность множеств: Создайте два множества set1 и set2. Выведите на экран элементы,
которые содержатся только в set1, но не содержатся в set2.
'''
# set1 = {100, 100, 95, 100, 112, 100, 100, 100}
# set2 = {110, 120, 95, 111, 100, 101, 100, 100}
# print(set1.difference(set2))
'''
5) Подмножество: Проверьте, является ли одно множество подмножеством другого
множества.
'''
# set1 = {100, 100, 95, 100, 112, 100, 100, 100}
# set2 = {110, 120, 95, 111, 100, 101, 100, 100}
# print(set1.issubset(set2))
'''
1) Хранение информации о студентах: Создайте словарь student, содержащий
информацию о студенте (имя, возраст, оценки и т. д.). Выведите эту информацию на
экран.
'''
# student = {
#     'name': 'Соломон',
#     'age': 30,
#     'grades': [100, 100, 95, 100, 100, 100, 100, 100],
# }
# print(student)
'''
2) Поиск элемента по ключу: Создайте словарь phone_book, содержащий имена и номера
телефонов. По запросу имени выведите соответствующий номер телефона.
'''
# phone_books = {
#     'Aitunuk': '0551551794',
#     'Solomon': '0220000018',
#     'Emir': '0772152383'
# }
# request = input('Введите имя: ')
# print(phone_books[request])
'''
3) Сумма значений: Создайте словарь expenses, содержащий расходы по различным
категориям (например, "еда", "транспорт" и т. д.). Вычислите общую сумму расходов.
'''
# expenses = {
#     'food': 10000,
#     'Aitunuk': 10000,
#     'Codify': 13000,
#     'Others': 13000
# }
# summa = 0
# for key, values in expenses.items():
#     summa += values
# print(summa)
'''
4) Обновление значения: Создайте словарь inventory, содержащий информацию о
количестве товаров на складе. Обновите количество определенного товара на складе и
выведите обновленную информацию.
'''
# inventory = {
#     'iphone': 15,
#     'ipad': 10,
#     'macbook': 17,
#     'Homepod': 5
# }
# inventory['macbook'] = 10
# inventory['Homepod'] = 10
# print(inventory)
'''
5) Удаление элемента: Создайте словарь grades, содержащий оценки студентов по
различным предметам. Удалите оценку определенного студента и выведите
обновленную информацию.
'''
grades = {
    'Solomon': {'math': 5, 'physics': 4, 'russian': 2},
    'Omurbek': {'math': 5, 'physics': 4, 'russian': 2}
}
grades['Solomon'].pop('math')
print(grades)